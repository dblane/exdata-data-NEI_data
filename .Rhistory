library(dplyr)
install.packages(dplyer)
install.packages(dplyr)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
install.packages(lattice)
install.packages("lattice")
install.packages("lattice")
library(lattice)
?
>
> library(nlme)
> library(lattice)
Warning message:
package ‘lattice’ was built under R version 3.1.3
> xyplot(weight ~ Time | Diet, BodyWeight)
>
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?points()
?llines()
?lines()
?text()
?trellis.par.set
?splom
?pring.trellis
?print.trellis
?par()
?trellis.par.set
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
install.packages("qplot")
library(qplot)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?geom
?geom()
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
## Each functions starts with the importation of data into variables.
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## Aggregate coal combustion data for US.
## We are pulling info from Level One and Level Four
comb <- grepl("comb", SCC$SCC.Level.One, ignore.case=TRUE)
coal <- grepl("coal", SCC$SCC.Level.Four, ignore.case=TRUE)
coalcomb <- (comb & coal)
combSCC <- SCC[coalcomb,]$SCC
combNEI <- NEI[NEI$SCC %in% combSCC,]
## Plot using ggplot2
library(ggplot2)
plot <- ggplot(combNEI,aes(factor(year),Emissions/10^5)) +
geom_bar(stat="identity",fill="grey",width=0.75) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM 2.5 Emission (10^5 Tons)")) +
labs(title=expression("PM 2.5 Coal Combustion Source Emissions Across US from 1999-2008"))
print(plot)
## Save as PNG
dev.copy(png, file="plot4.png", height=480, width=480)
dev.off()
setwd("~/Desktop/David Blane Studios/Data Science Cert/Pollutant Data/exdata-data-NEI_data")
## Each functions starts with the importation of data into variables.
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## Aggregate coal combustion data for US.
## We are pulling info from Level One and Level Four
comb <- grepl("comb", SCC$SCC.Level.One, ignore.case=TRUE)
coal <- grepl("coal", SCC$SCC.Level.Four, ignore.case=TRUE)
coalcomb <- (comb & coal)
combSCC <- SCC[coalcomb,]$SCC
combNEI <- NEI[NEI$SCC %in% combSCC,]
## Plot using ggplot2
library(ggplot2)
plot <- ggplot(combNEI,aes(factor(year),Emissions/10^5)) +
geom_bar(stat="identity",fill="grey",width=0.75) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM 2.5 Emission (10^5 Tons)")) +
labs(title=expression("PM 2.5 Coal Combustion Source Emissions Across US from 1999-2008"))
print(plot)
## Save as PNG
dev.copy(png, file="plot4.png", height=480, width=480)
dev.off()
## Each functions starts with the importation of data into variables.
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## Here we subset the data for vehicles from the SCC and NEI data sets in Baltimore
vehicles <- grepl("vehicle", SCC$SCC.Level.Two, ignore.case=TRUE)
vehiclesSCC <- SCC[vehicles,]$SCC
vehiclesNEI <- NEI[NEI$SCC %in% vehiclesSCC,]
baltimoreVehicles <- vehiclesNEI[vehiclesNEI$fips==24510,]
## Plot using ggplot2
library(ggplot2)
plot <- ggplot(baltimoreVehicles,aes(factor(year),Emissions)) +
geom_bar(stat="identity",fill="grey",width=0.75) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM 2.5 Emission (10^5 Tons)")) +
labs(title=expression("PM 2.5 Motor Vehicle Source Emissions in Baltimore from 1999-2008"))
print(plot)
## Save as PNG
dev.copy(png, file="plot5.png", height=480, width=480)
dev.off()
## Each functions starts with the importation of data into variables.
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## Here we subset the data for vehicles from the SCC and NEI data sets in Baltimore
vehiclesbaltimoreNEI <- vehiclesNEI[vehiclesNEI$fips == 24510,]
vehiclesbaltimoreNEI$city <- "Baltimore City"
vehiclesLANEI <- vehiclesNEI[vehiclesNEI$fips=="06037",]
vehiclesLANEI$city <- "Los Angeles County"
bothNEI <- rbind(vehiclesBaltimoreNEI,vehiclesLANEI)
## Plot using ggplot2
library(ggplot2)
plot <- ggplot(bothNEI, aes(x=factor(year), y=Emissions, fill=city)) +
geom_bar(aes(fill=year),stat="identity") +
facet_grid(scales="free", space="free", .~city) +
guides(fill=FALSE) + theme_bw() +
labs(x="year", y=expression("Total PM 2.5 Emission (Kilo-Tons)")) +
labs(title=expression("PM 2.5 Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
print(plot)
## Save as PNG
dev.copy(png, file="plot6.png", height=480, width=480)
dev.off()
## Each functions starts with the importation of data into variables.
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## Here we subset the data for vehicles from the SCC and NEI data sets in Baltimore
vehicles <- grepl("vehicle", SCC$SCC.Level.Two, ignore.case=TRUE)
vehiclesSCC <- SCC[vehicles,]$SCC
vehiclesNEI <- NEI[NEI$SCC %in% vehiclesSCC,]
vehiclesbaltimoreNEI <- vehiclesNEI[vehiclesNEI$fips == 24510,]
vehiclesbaltimoreNEI$city <- "Baltimore City"
vehiclesLANEI <- vehiclesNEI[vehiclesNEI$fips=="06037",]
vehiclesLANEI$city <- "Los Angeles County"
bothNEI <- rbind(vehiclesbaltimoreNEI,vehiclesLANEI)
## Plot using ggplot2
library(ggplot2)
plot <- ggplot(bothNEI, aes(x=factor(year), y=Emissions, fill=city)) +
geom_bar(aes(fill=year),stat="identity") +
facet_grid(scales="free", space="free", .~city) +
guides(fill=FALSE) + theme_bw() +
labs(x="year", y=expression("Total PM 2.5 Emission (Kilo-Tons)")) +
labs(title=expression("PM 2.5 Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
print(plot)
## Save as PNG
dev.copy(png, file="plot6.png", height=480, width=480)
dev.off()
